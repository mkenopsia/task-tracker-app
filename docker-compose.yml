services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_container
    volumes:
      - postgres_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 60s
      retries: 60
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOO_4LW_COMMANDS_WHITELIST: ruok
    ports:
      - "2181:2181"
    healthcheck:
      test: echo "ruok" | timeout 2 nc -w 2 localhost 2181 | grep imok
      interval: 1s
      timeout: 60s
      retries: 60

  kafka:
    image: apache/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092  # для работы внутри Docker
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: /kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server kafka:9092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60

  task-tracker-backend:
    depends_on:
      postgres:
        condition: service_healthy
    build: task-tracker-backend/.
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: dev

  task-tracker-email-sender:
    depends_on:
      - task-tracker-backend
    build: task-tracker-email-sender/.

volumes:
  postgres_data:
    driver: local